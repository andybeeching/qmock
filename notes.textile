// TODO: Make mock.end() work w/o method
// Get rid of .__getState(), leaky dude!

// TODO: Implement test framework compare function, or auto-detect from popular variants (buster, qunit, jasmine, node?)
// TODO: Implement assertionCount method
Research why not default?

// Examine why failslow wasn't working, suspect coerced equality checks

// Implement or change coerced checks for QMock

// Beter semantics overall - error messages suck, naming is too generic!

// TODO: Fix IncorrectNumberofMethodCallsException

// Buster.assert.same compares by reference on primitives? Huh?

// Double check instance and static property notation (# and .)

// Change id ==> "desc"

// Modify typeof checks to is() ? e.g. typeof foo == "object" - potential false positves

// Consider tests against shadowing API - perhaps it would be good to only accept a descriptor, and use a stratified API and/or prefix the method names to avoid potential collisions? Why should my engine prevent someone mocking out objects with the same identifier as me?

Consider upgrading the test cases to something more relevant/contemporary

// BUSTER THOUGHTS

- Can I get better error messages, e.g. {FOO} should have been {BAR} format

// RFACTOR THOUGHTS

- Initial file was way too long
- Lots of needless repetition
-- Sort of point scoring - false metric of testing
-- Undue time to run, want faster feedback loop
- Broke Buster's convention of 1 test case per file
- Difficult to navigate
- Didn't lean on expressive assertions enough
-- Thus bit of a maintenance nightmare
- Way too many assertions per test
-- Not granular enough - one fails, 20 fail
